// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  projects Project[] @relation("owner")
  stared   Project[] @relation("starred_by")
  member   Project[] @relation("members")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Project {
  id         String   @id @default(uuid())
  name       String
  key        String
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  members    User[]   @relation("members")
  owner      User     @relation("owner", fields: [user_id], references: [id])
  starred_by User[]   @relation("starred_by")
  issues     Issue[]
  statuses   Status[]
}

model Status {
  id         String   @id @default(uuid())
  status     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  issues     Issue[]

  project    Project @relation(fields: [project_id], references: [id])
  project_id String
}

model Issue {
  id      String @id @default(uuid())
  title   String
  content String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  status     Status  @relation(fields: [status_id], references: [id])
  status_id  String
  project    Project @relation(fields: [project_id], references: [id])
  project_id String
}
